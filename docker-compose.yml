version: "3"

services:
  # MQTT SERVER
  broker-mqtt:
    image: eclipse-mosquitto:1.6
    ports:
      - "9002:9001"
      - "1883:1883"
    hostname: 'broker-mqtt'
    volumes:
      - MQTT_VOLUME:/mosquitto/data 
    networks:
      infranet:
        aliases:
        - 'broker-mqtt-service'

<<<<<<< HEAD
#  api-gateway:
#    build: ./apiGateway 
#    ports:
#      - "5200:5200"
#    hostname: "api-gateway"
#    depends_on:
#      - "broker-mqtt"
#    networks:
#      infranet:
#        aliases:
#        - 'api-gateway-service'
=======
  # API GATEWAY
  api-gateway:
    build: ./apiGateway 
    ports:
      - "5200:5200"
    hostname: "api-gateway"
    depends_on:
      - "broker-mqtt"
    networks:
      infranet:
        aliases:
        - 'api-gateway-service'
>>>>>>> fb92d8babfed4ab5783193e0d9bd2ed353dcbb7e

  # MONGO_DB SERVER FOR CATALOG MS
  catalog-mongo-db:
    image: mongo:4
    ports:
      - "27018:27017"
    hostname: "catalog-mongo-db"
    environment: 
      - storageEngine=wiredTiger
    volumes: 
      - CATALOG_MONGO_VOLUME:/data/db
    networks:
      infranet:
        aliases:
        - 'catalog-mongo-db-service'

  # MONGO DB SERVER FOR OFFER MS 
  offer-mongo-db:
    image: mongo:4
    ports:
      - "27019:27017"
    hostname: "offer-mongo-db"
    environment: 
      - storageEngine=wiredTiger
    volumes: 
      - OFFER_MONGO_VOLUME:/data/db
    networks:
      infranet:
        aliases:
        - 'offer-mongo-db-service'

  # MONGO DB SERVER FOR STORE MS 
  store-mongo-db:
    image: mongo:4
    ports:
      - "27020:27017"
    hostname: "store-mongo-db"
    environment: 
      - storageEngine=wiredTiger
    volumes: 
      - STORE_MONGO_VOLUME:/data/db   
    networks:
      infranet:
        aliases:
        - 'store-mongo-db-service'

  # CATALOG_MANAGER MICRO-SERVICE
  ms-catalog-mng:
    build: ./microservices/ms-catalog-mng
    hostname: "ms-catalog-mng"
    depends_on:
      - "broker-mqtt"
      - "catalog-mongo-db"   
    networks:
      infranet:
        aliases:
        - 'ms-catalog-mng-service'

  # OFFER_MANAGER MICRO-SERVICE
  ms-offer-mng:
    build: ./microservices/ms-offer-mng
    hostname: "ms-offer-mng"
    depends_on:
      - "broker-mqtt"
      - "offer-mongo-db"   
    networks:
      infranet:
        aliases:
        - 'ms-offer-mng-service'

  # STORE_MANAGER MICRO-SERVICE
  ms-store-mng:
    build: ./microservices/ms-store-mng
    hostname: "ms-store-mng"
    depends_on:
      - "broker-mqtt"
      - "store-mongo-db"   
    networks:
      infranet:
        aliases:
        - 'ms-store-mng-service'
        

  grafana:
    image: grafana/grafana:8.0.6
    container_name: grafana
    restart: unless-stopped
    volumes:
      - GRAFANA_DATA:/var/lib/grafana
    ports:
      - 3000:3000
    hostname: grafana
    networks:
      infranet:
        aliases:
          - 'grafana-service'

  prometheus:
    image: prom/prometheus:v2.28.1
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - PROMETHEUS_DATA:/prometheus
    ports:
      - 9090:9090
    hostname: prometheus
    networks:
      infranet:
        aliases:
        - 'prometheus-service'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=1y'
      - '--web.enable-lifecycle'
  
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    ports:
      - 9100:9100
    hostname: node-exporter 
    command:
      - '--path.rootfs=/host'
    pid: host
    volumes:
      - ./NODE_EXPORTER:/host
    networks:
      infranet:
        aliases:
        - 'node-exporter-service'

networks:
  infranet:

volumes: 
  MQTT_VOLUME:
  CATALOG_MONGO_VOLUME:
  OFFER_MONGO_VOLUME:
  # AUTH_MONGO_VOLUME:
  STORE_MONGO_VOLUME:
  GRAFANA_DATA:
  PROMETHEUS_DATA:
  NODE_EXPORTER:
